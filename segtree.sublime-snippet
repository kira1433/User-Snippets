<snippet>
	<content><![CDATA[
struct segtree{
    vector<int> tree;
    int n;
    void init(int _n){
        n = _n;
        tree.assign(4*n,0);
    }

    void build(vector<int>& a,int x,int lx,int rx){
        if(rx-lx == 1){
            if(lx<a.size()) tree[x] = a[lx];
            return;
        }
        int m = (lx+rx)/2;
        build(a,2*x+1,lx,m);
        build(a,2*x+2,m,rx);
        tree[x] = tree[2*x+1] + tree[2*x+2];
    }

    void build(vector<int>& a){
        build(a,0,0,n);
    }

    void set(int i,int v,int x,int lx,int rx){
        if(rx-lx == 1){
            tree[x] = v;
            return;
        }
        int m = (lx+rx)/2;
        if(i<m)set(i,v,2*x+1,lx,m);
        else set(i,v,2*x+2,m,rx);
        tree[x] = tree[2*x+1] + tree[2*x+2];
    }

    void set(int i,int v){
        set(i,v,0,0,n);
    }

    int sum(int l,int r,int x,int lx,int rx){
        if(lx >= r || l >= rx) return 0;
        if(lx>=l && rx<=r)return tree[x];
        int m = (lx+rx)/2;
        int s1 = sum(l,r,2*x+1,lx,m);
        int s2 = sum(l,r,2*x+2,m,rx);
        return s1+s2;
    }

    int sum(int l,int r){
        return sum(l,r,0,0,n);
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segtree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
