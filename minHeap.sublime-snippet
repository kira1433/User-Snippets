<snippet>
	<content><![CDATA[
class minHeap{
public:
    int sz=0;
    vector<int> heap;
    minHeap(int n){
        sz=0;
        heap.resize(n);
    }
    minHeap(vector<int>& a){
        sz=a.size();
        heap = a;
        for(int i=heap.size()/2 -1;i>=0;i--){
            heapify(i);
        }
    }

    bool empty(){
        return sz==0;
    }

    void heapify(int temp){
        int s = temp;
        if(2*temp < sz && heap[2*temp]<heap[s]) s = 2*temp;
        if(2*temp+1 < sz && heap[2*temp+1]<heap[s]) s = 2*temp+1;
        if(s!=temp){
            swap(heap[temp],heap[s]);
            heapify(s);
        }
    }

    void push(int x){
        heap[sz] = x;
        int temp = sz;
        while (heap[temp] < heap[temp / 2]) {
            swap(heap[temp],heap[temp/2]);
            temp /= 2;
        }
        sz++;
    }
    int pop(){
        sz--;
        swap(heap[sz],heap[0]);
        heapify(0);
        return heap[sz];
    }
};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>minHeap</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
