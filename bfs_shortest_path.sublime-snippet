<snippet>
	<content><![CDATA[
    auto bfs = [&](){
    queue<int> q;
    int dist[n];
    int parent[n];
    for(int i=0;i<n;i++){
        dist[i]=INT_MAX;
        parent[i]=-1;
    }
    q.push(st);
    dist[st]=0;   
    while(!q.empty()){
        int x=q.front();q.pop();
        // cout<<x/m<<sp<<x%m<<nl;
        for(int i:a[x]){
            if(dist[i]==INT_MAX){
                dist[i]=dist[x]+1;
                parent[i]=x;    
                q.push(i);
            }
        }
    }
    if(dist[ed]==INT_MAX)cout<<"NO"<<nl;
    else{
        cout<<"YES"<<nl;
        cout<<dist[ed]<<nl;
        vector<int> v{ed};
        while(v.back()!=st){
            v.PB(parent[v.back()]);
        }
        reverse(all(v));
        for(auto i:v)cout<<i<<sp;
    }
    }
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>bfs_shortest_path</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
